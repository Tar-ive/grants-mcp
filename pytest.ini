[tool:pytest]
minversion = 6.0
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --junit-xml=junit.xml
    --durations=10
    --maxfail=5

testpaths = tests

markers =
    # Test categories
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (mocked external dependencies)  
    live: Live tests using real API (requires API_KEY)
    contract: API contract and schema validation tests
    performance: Performance and benchmark tests
    edge_case: Edge case and error handling tests
    slow: Tests that take a long time to run
    
    # API interaction markers
    real_api: Tests requiring real API access
    mock_only: Tests that should only use mocks
    rate_limited: Tests that consume significant API quota
    
    # Specific functionality markers
    cache: Cache-related tests
    discovery: Grant discovery functionality tests
    mcp_protocol: MCP protocol compliance tests
    error_handling: Error handling and resilience tests
    
    # Infrastructure markers
    docker: Docker-related tests
    parallel: Tests for parallel execution
    concurrent: Concurrency and thread-safety tests
    memory: Memory usage and leak tests
    timeout: Timeout and async behavior tests

python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
testpaths = tests
norecursedirs = .git .tox node_modules htmlcov build dist

# Timeout settings
timeout = 300
timeout_method = thread

# Asyncio settings
asyncio_mode = auto

# Coverage settings
[tool:coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */node_modules/*
    */build/*

[tool:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Performance test settings  
[tool:pytest-benchmark]
min_rounds = 5
max_time = 2.0
min_time = 0.000001
warmup = true
warmup_iterations = 2
disable_gc = true
sort = mean

# HTML report settings
[tool:coverage:html]
directory = htmlcov
title = Grants MCP Server Test Coverage