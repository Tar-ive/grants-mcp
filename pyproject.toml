[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grantsmanship-mcp"
version = "2.0.0"
description = "A comprehensive grants analysis MCP server for discovering and analyzing government funding opportunities"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Grants Analysis Team"},
]
dependencies = [
    "fastmcp>=0.3.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "python-json-logger>=2.0.0",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "aioresponses>=0.7.0",
    "jsonschema>=4.19.0",
]

[project.scripts]
grantsmanship-mcp = "main:main"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
]
markers = [
    "real_api: marks tests requiring real API access",
    "mock_only: marks tests that should only use mocks",
    "rate_limited: marks tests that consume significant API quota", 
    "performance: marks performance benchmark tests",
    "contract: marks API contract tests",
    "slow: marks tests that take a long time to run",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true